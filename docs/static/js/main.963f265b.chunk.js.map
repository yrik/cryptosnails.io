{"version":3,"sources":["../node_modules/@ion-phaser/core/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","CryptoSnailsABI.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","abi","Game","player","Moralis","activeNFT","PlayerPosition","extend","useState","undefined","user","setUser","config","type","Phaser","AUTO","scale","width","window","innerWidth","height","innerHeight","physics","default","arcade","debug","scene","preload","create","update","useEffect","a","User","current","init","cursors","text","coinScore","competitors","playerUrl","this","load","image","levelQuery","Query","descending","first","level","size","get","indexes","Array","tilemapConf","tileWidth","tileHeight","backgroundTileMap","make","tilemap","data","_","backgroundTileSet","addTilesetImage","createLayer","wallsTileMap","wallsTileSet","wallsLayer","setCollisionBetween","edgeTileMap","row","col","edgeTileSet","edgeLayer","camera","cameras","main","input","keyboard","createCursorKeys","setBounds","widthInPixels","heightInPixels","coins","add","staticGroup","coinsQuery","limit","find","coinData","subscribe","on","refresh","lastQuery","equalTo","lastPosition","lastX","lastY","refreshBody","overlap","collectCoin","collider","startFollow","query","position","x","y","addr","setScale","console","log","font","fill","padding","backgroundColor","setScrollFactor","claimButton","setInteractive","claimCoins","time","delta","left","isDown","setVelocityX","setFlip","right","down","setVelocityY","up","playerPosition","set","save","alert","Cloud","run","setText","coin","destroy","game","initialize","MemoizedGame","React","memo","App","isProduction","options","address","chain","useMoralis","isInitialized","web3","authenticate","isAuthenticated","logout","enableWeb3","isWeb3Enabled","web3EnableError","isWeb3EnableLoading","overlay","setOverlay","isMinting","setMinting","ready","setReady","snailPrice","setSnailPrice","totalSupply","setTotalSupply","nfts","setNFTs","setActiveNFT","amount","setAmount","price","mul","fetchNFTs","provider","ethers","providers","Web3Provider","ethereum","signer","getSigner","contract","Contract","tokensOfOwner","getAddress","all","url","fetch","replace","resp","json","nft","length","mintSnail","login","mint","value","tx","wait","receipt","document","location","reload","name","message","JSON","stringify","playDemo","switchNetwork","getNetwork","chainId","send","isMetaMask","signingMessage","Web3API","native","runContractFunction","function_name","BigNumber","from","err","Helmet","charSet","className","style","top","src","onClick","disabled","min","max","onChange","target","utils","formatEther","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","moralisConfig","test","appId","serverUrl","production","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.963f265b.chunk.js","sourcesContent":["var map = {\n\t\"./ion-phaser.entry.js\": [\n\t\t1047,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1044;\nmodule.exports = webpackAsyncContext;","export const abi = [\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ApprovalForAll\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"previousOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"OwnershipTransferred\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"snailsAmount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"mint\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"renounceOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"snailsAmount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"reserveSnails\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"_data\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setApprovalForAll\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setBaseURI\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"price\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setPrice\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"toogleSale\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"withdraw\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getApproved\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"isApprovedForAll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"MAX_SNAILS\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"owner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ownerOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"saleActive\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"snailPrice\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes4\",\n\t\t\t\t\"name\": \"interfaceId\",\n\t\t\t\t\"type\": \"bytes4\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"supportsInterface\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"index\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokenByIndex\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"index\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokenOfOwnerByIndex\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokensOfOwner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string[]\",\n\t\t\t\t\"name\": \"ownerTokens\",\n\t\t\t\t\"type\": \"string[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokenURI\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n]\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useMoralis } from 'react-moralis'\nimport Phaser from 'phaser'\nimport { IonPhaser } from '@ion-phaser/react'\nimport { blobToURL, fromURL } from 'image-resize-compress';\n\n\nexport function Game({ Moralis, activeNFT }) {\n  const PlayerPosition = Moralis.Object.extend(\"PlayerPosition\");\n\n  const [game, setGame] = useState()\n\n  const [user, setUser] = useState(undefined)\n  let nft\n\n  const config = {\n      type: Phaser.AUTO,\n      scale: {\n          width: window.innerWidth,\n          height: window.innerHeight,\n      },\n       physics: {\n          default: 'arcade',\n          arcade: {\n              debug: false\n          }\n      },\n      scene: {\n          preload: preload,\n          create: create,\n          update: update\n      }\n  };\n\n  useEffect(()=>{\n    async function init() {      \n        let user = Moralis.User.current();\n        setUser(user)\n    }\n    init()\n  })\n\n  let player;\n  let coinScore = 0;\n  let cursors;\n  let text;\n\n  const competitors = {};\n\n  async function preload () {\n      let playerUrl = (activeNFT && activeNFT['image-preview']) ? activeNFT['image-preview']: \"/images/demo-preview.png\"\n    \n      this.load.image(\"player\", playerUrl);\n      this.load.image(\"coin\", \"/images/coin.png\");\n      this.load.image(\"tiles\", \"/images/sprite-fix.png\");\n  }\n\n\n  async function create () {\n\n    let levelQuery = new Moralis.Query('Level')\n    const level = await levelQuery.descending(\"createdAt\").first()\n\n    const size = level.get('size')\n    const indexes = [...Array(size).keys()]\n\n    const tilemapConf = {tileWidth: 32, tileHeight: 32}\n\n    const backgroundTileMap = this.make.tilemap({ \n      data: indexes.map( _ => indexes.map( _ => 4)), \n      ...tilemapConf\n    })\n    const backgroundTileSet = backgroundTileMap.addTilesetImage(\"tiles\", null, 32, 32, 1, 2)\n    const backgroundLayer = backgroundTileMap.createLayer(0, backgroundTileSet, 0, 0); // layer index, tileset, x, y\n\n    const wallsTileMap = this.make.tilemap({ \n      data: level.get('data'),\n      ...tilemapConf\n    })\n    const wallsTileSet = wallsTileMap.addTilesetImage(\"tiles\", null, 32, 32, 1, 2)\n    const wallsLayer = wallsTileMap.createLayer(0, wallsTileSet, 0, 0); // layer index, tileset, x, y\n    wallsLayer.setCollisionBetween(1, 50);\n\n\n    const edgeTileMap = this.make.tilemap({ \n      data: indexes.map( row => indexes.map( col => {\n       if(row == 0 || row == size-1 || col == 0 || col == size-1) return 3 \n      })), \n      ...tilemapConf\n    })\n    const edgeTileSet = edgeTileMap.addTilesetImage(\"tiles\", null, 32, 32, 1, 2)\n    const edgeLayer = edgeTileMap.createLayer(0, edgeTileSet, 0, 0); // layer index, tileset, x, y\n    edgeLayer.setCollisionBetween(1, 50);\n\n\n    // Phaser supports multiple cameras, but you can access the default camera like this:\n    const camera = this.cameras.main;\n\n    // Set up the arrows to control the camera\n    cursors = this.input.keyboard.createCursorKeys();\n\n    // Constrain the camera so that it isn't allowed to move outside the width/height of tilemap\n    camera.setBounds(0, 0, backgroundTileMap.widthInPixels, backgroundTileMap.heightInPixels);\n\n    // Help text that has a \"fixed\" position on the screen\n\n    const coins = this.physics.add.staticGroup()\n    let coinsQuery = new Moralis.Query('Coin')\n    const coinsData = await coinsQuery.limit(1000).find()\n    coinsData.map(coinData => {\n      //console.log('coins', coins)\n      coins.create(coinData.get('x') * 32, coinData.get('y') * 32, \"coin\"); \n    })\n\n    let coinsSubscription = await coinsQuery.subscribe();\n    coinsSubscription.on('create', (coinData) => {\n      //console.log('created', coinData)\n      coins.create(coinData.get('x') * 32, coinData.get('y') * 32, \"coin\"); \n      coins.refresh()\n    });\n\n    if (user) {\n\n      coinScore = user.get('coinScore') || 0\n\n      let lastQuery = new Moralis.Query('PlayerPosition')\n      lastQuery.equalTo(\"player\", user.get(\"ethAddress\"))\n      const lastPosition = await lastQuery.descending(\"createdAt\").first()\n      let lastX = 300\n      let lastY = 300\n      if (lastPosition && lastPosition.get('x') && lastPosition.get('y')) {\n        lastX = lastPosition.get('x')\n        lastY = lastPosition.get('y')\n      }\n\n      player = this.physics.add.image(lastX, lastY, 'player').refreshBody();\n\n      this.physics.add.overlap(player, coins, collectCoin, null, this);\n      this.physics.add.collider(player, wallsLayer);\n      this.physics.add.collider(player, edgeLayer);\n      camera.startFollow(player)\n\n      let query = new Moralis.Query('PlayerPosition');\n      let subscription = await query.subscribe();\n      subscription.on('create', (position) => {\n        let x = position.get(\"x\")\n        let y = position.get(\"y\")\n        let addr = position.get(\"player\")\n        let currentUserAddr = user ? user.get(\"ethAddress\") : undefined;\n\n        // move competitors\n        if(addr != currentUserAddr){\n          // if first time seeing\n          if(competitors[addr] == undefined){\n            competitors[addr] = this.add.image(x, y, 'player').setScale(0.20);\n          }\n          else{\n            competitors[addr].x = x;\n            competitors[addr].y = y;\n          }\n        }\n      });\n\n      let levelQuery = new Moralis.Query('Level');\n      let levelSubscription = await levelQuery.subscribe();\n      levelSubscription.on('create', (level) => {\n        console.log('New Level created')\n        // TODO: check if works\n        const size = level.get('size')\n        const indexes = [...Array(size).keys()]\n\n        /*\n        wallsLayer.layer.data = level.get('data')\n\n        backgroundLayer.layer.data = indexes.map( _ => indexes.map( _ => 4))\n\n        edgeLayer.layer.data = indexes.map( row => indexes.map( col => {\n           if(row == 0 || row == size-1 || col == 0 || col == size-1) return 3 \n          }))\n        */\n      });\n\n      text = this.add.text(16, 16, `Coins Collected: ${coinScore}`, {\n          font: \"12px monospace\",\n          fill: \"#ffffff\",\n          padding: { x: 10, y: 5 },\n          backgroundColor: \"#000000\"\n      }).setScrollFactor(0);\n\n      const claimButton = this.add.text(180, 16, `Claim`, {\n          font: \"12px monospace\",\n          fill: \"#ffffff\",\n          padding: { x: 10, y: 5 },\n          backgroundColor: \"#000000\"\n      }).setScrollFactor(0);\n\n      claimButton.setInteractive();\n      claimButton.on('pointerdown', claimCoins);\n    }\n  }\n\n  async function update(time, delta) {\n\n    if (cursors) {\n      if (cursors.left.isDown)\n      {\n          player.setVelocityX(-160);\n          player.setFlip(true, false)\n      }\n      else if (cursors.right.isDown)\n      {\n          player.setVelocityX(160);\n          player.setFlip(false, false)\n      }\n      else if (cursors.down.isDown)\n      {\n          player.setVelocityY(160);\n      }\n      else if (cursors.up.isDown)\n      {\n          player.setVelocityY(-160);\n      }\n    }\n\n    if (player) {\n      if(player.lastX!=player.x  || player.lastY!=player.y){\n        \n        if (user) {\n          const playerPosition = new PlayerPosition();\n\n          playerPosition.set(\"player\", user.get(\"ethAddress\"));\n          playerPosition.set(\"x\",player.x);\n          playerPosition.set(\"y\",player.y)\n\n          player.lastX = player.x;\n          player.lastY = player.y;\n\n          await playerPosition.save();\n        }\n      }\n    }\n  }\n\n  async function claimCoins() {\n    \n    // TODO: check if user own NFT\n\n      if (user) {\n        alert(\"Moving coins to your account..\")\n        await Moralis.Cloud.run(\"claimCoins\")\n        coinScore = 0;\n        user.set('coinScore', 0) \n        await user.save()\n        text.setText(`Coins collected: ${coinScore}`); // set the text to show the current score\n      } else {\n        alert(\"Please mint a SNAIL to claim coins\")\n      }\n  }\n\n  async function collectCoin(player, coin) {\n      coin.destroy(coin.x, coin.y); // remove the tile/coin\n      coinScore ++; // increment the score\n\n      // TODO: move to server when it's possible to modify user there\n      user.set('coinScore', coinScore) \n      await user.save()\n\n      try{\n        await Moralis.Cloud.run(\"collectCoin\", {x: coin.x/32, y: coin.y/32})\n      } catch (err) {\n        console.log(err)\n      }\n      text.setText(`Coins collected: ${coinScore}`); // set the text to show the current score\n      return false;\n  }\n\n  console.log('CALLING IonPhaser')\n  return (<IonPhaser game={config} initialize={true}/>)\n}\n\nexport const MemoizedGame = React.memo(Game)\n","import { useState, useEffect } from 'react';\n\nimport { ethers } from \"ethers\";\nimport { Helmet } from \"react-helmet\";\nimport { useMoralis } from 'react-moralis'\n\nimport './App.css';\nimport { abi } from \"./CryptoSnailsABI.js\";\nimport { MemoizedGame, Game } from './Game.js'\n\n\nfunction App({ isProduction }) {\n\n  const chain = isProduction ? \"polygon\" : \"mumbai\"\n  const NFT_ADDRESS = \"0x6ECeF752D1e76c7d071E828cFC67Ec8635e149E0\"\n  const NFT_SYNBOL = \"SNAIL\"\n\n  const options = {\n    address: NFT_ADDRESS,\n    abi: abi,\n    chain: chain,\n  };\n\n  const { Moralis, web3, isInitialized, authenticate, logout, isAuthenticated, user, isWeb3Enabled, enableWeb3, web3EnableError, isWeb3EnableLoading } = useMoralis()\n\n  const [overlay, setOverlay] = useState(true)\n  const [isMinting, setMinting] = useState(false)\n  const [ready, setReady] = useState(false)\n\n  const [snailPrice, setSnailPrice] = useState(undefined)\n  const [totalSupply, setTotalSupply] = useState(undefined)\n\n  const [nfts, setNFTs] = useState([])\n  const [activeNFT, setActiveNFT] = useState([])\n\n  const [amount, setAmount] = useState(1)\n  const price = snailPrice && amount ? snailPrice.mul(amount) : undefined\n\n  async function fetchNFTs() {\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(options.address, options.abi, signer);\n      let nfts = await contract.tokensOfOwner(signer.getAddress())\n      nfts = await Promise.all(nfts.map(async (url) => {\n        let resp = await fetch(url.replace('ipfs://', 'https://ipfs.io/ipfs/'))\n        let nft = await resp.json()\n        nft.image = nft.image.replace('ipfs://', 'https://ipfs.io/ipfs/')\n        nft['image-preview'] = nft['image-preview'].replace('ipfs://', 'https://ipfs.io/ipfs/')\n        return nft\n      }))\n      setNFTs(nfts)\n      if (nfts.length > 0) {\n        setActiveNFT(nfts[0])\n      }\n  }\n\n  useEffect(()=>{\n    async function init() {      \n      if (isInitialized) {\n        const totalSupply = await Moralis.Web3API.native.runContractFunction({function_name: \"totalSupply\", ...options})\n        setTotalSupply(totalSupply)\n\n        const snailPrice = await Moralis.Web3API.native.runContractFunction({function_name: \"snailPrice\", ...options})\n        setSnailPrice(ethers.BigNumber.from(snailPrice))\n      }\n    }\n    init()\n  }, [isInitialized])\n\n  useEffect(()=>{\n    async function init() {      \n      if (isInitialized) {\n        if (isAuthenticated && window.ethereum && window.ethereum.isMetaMask) {\n          await switchNetwork()\n          await fetchNFTs()\n          setReady(true)\n        } else {\n          setReady(true)\n        }\n      }\n    }\n    init()\n  }, [isInitialized, isAuthenticated])\n\n  useEffect(()=>{\n    async function init() {      \n      try {\n        window.ethereum.on('chainChanged', () => {\n          document.location.reload()\n        })\n\n        window.ethereum.on('accountsChanged', () => {\n          document.location.reload()\n        })\n      } catch(err) {console.log(err)}\n    }\n    init()\n  }, [])\n\n\n  async function mintSnail() {\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(options.address, options.abi, signer);\n\n      setMinting(true)\n\n      if (!isAuthenticated) {\n        await login()\n      }\n\n      try {\n        const tx = await contract.mint(amount, {value: price})\n        const receipt = await tx.wait()\n        console.log(receipt)\n        await fetchNFTs()\n        document.location.reload()\n        setOverlay(false)\n      } catch(err) {\n        setMinting(false)\n        console.log(err)\n        if (err & err.name) {\n          alert(err.name + ': ' + err.message + '. ' + err.data ? err.data.message : '')\n        } else {\n          alert(JSON.stringify(err))\n        }\n      }\n  }\n\n  async function playDemo() {\n    if (!isAuthenticated) {\n      await login() \n    }\n    if (isAuthenticated) {\n      setOverlay(false)\n    }\n  }\n\n  function play() {\n    setOverlay(false)\n  }\n\n  async function switchNetwork() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    console.log('provider', provider)\n    const { chainId } = await provider.getNetwork()\n    console.log('chainId', chainId)\n    // Try to switch to polygon if not on polygon or polygon testnet\n    if (chainId !== 137 && chainId != 80001) {\n      try {\n        await provider.send(\"wallet_switchEthereumChain\", [{ chainId: \"0x89\" }])\n      } catch (error) {\n        alert(\"Please switch to POLYGON network\")\n      }\n    }\n  }\n\n  async function login() {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      await enableWeb3()\n      await authenticate({signingMessage: \"CryptoSnails Auth\"})\n      await switchNetwork()\n    } else {\n      alert(\"Please install Metamask wallet to use this website\")\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Crypto Snails - Earn $snail crypto by playing the game</title>\n          <meta name=\"description\" value=\"Every day coins are thrown on the table. Collect them with a snail.\" />\n      </Helmet>\n\n          <div>\n            { ready ? <MemoizedGame activeNFT={activeNFT} Moralis={Moralis}/> : null}\n\n            { overlay ? (\n            <div className=\"bg-purple bg-opacity-50 flex\" style={{position: \"absolute\", top: \"0px\", width: \"100%\", height: \"100%\"}}>\n\n              \n              {/*\n              <div className=\"m-auto h-30 w-30 bg-gray-50\">\n                <h1 className=\"mt-5 text-3xl text-center uppercase text-green font-bold\">Earn $snail crypto by playing the game</h1>\n                <div className=\"flex justify-center\">\n                  <h4 className=\"max-w-x2l mt-1 text-center text-gray-500\">Every day coins are thrown on the table. Collect them with a snail.</h4>\n                </div>\n              </div>\n              */}\n\n              <div className=\"m-auto w-auto flex justify-center\">\n\n                { nfts.length === 0 ? (\n                <div className=\"w-60 h-90 p-5 text-center bg-gray-500\">\n                  <div className=\"w-full h-40 border-gray-50 rounded-md border\">\n                    <img className=\"max-h-full max-w-full mx-auto\" src=\"/images/demo.png\" />\n                  </div>\n                  <div className=\"text-white font-bold uppercase text-sm\">speed: mormal</div> \n                  <button className=\"px-8 py-2 rounded-md bg-yellow m-2 uppercase text-sm\" onClick={async () => {await playDemo()}}>DEMO Play</button>\n                </div>\n                ) : \n                  (\n                <div className=\"w-60 h-90 p-5 text-center bg-gray-500\">\n                  <div className=\"w-full h-40 border-gray-50 rounded-md border\">\n                    <img className=\"max-h-full max-w-full mx-auto\" src={activeNFT.image} />\n                  </div>\n                  <div className=\"text-white font-bold uppercase text-sm\">speed: Demo</div> \n                  <button className=\"px-8 py-2 rounded-md bg-green m-2 uppercase text-sm\" onClick={async () => {play()}}>Play</button>\n                </div>\n                  )\n               \n                }\n\n                <div className=\"ml-5 w-60 h-90 p-5 text-center bg-gray-500\">\n                  <div className=\"w-full h-40 border-gray-50 rounded-md border\">\n                    <img className=\"max-h-full max-w-full mx-auto\" src=\"/images/snail.gif\" />\n                  </div>\n                  <div className=\"text-white font-bold uppercase text-sm\">speed: normal / VIP </div> \n                  <button disabled={isMinting} className=\"px-8 py-2 rounded-md m-2 bg-red text-white uppercase text-sm\" onClick={async () => {mintSnail()}}>{isMinting ? \"Processing..\" : \"Mint & Play\"}</button>\n                  <div>\n                    <input className=\"border text-center mr-5\" type=\"number\" min=\"1\" max=\"100\" value={amount} onChange={(e) => setAmount(e.target.value)} />\n                  </div>\n                  <div className=\"p-0 m-0\">\n                    <span className=\"p-0 m-0 text-white text-xs\">price: {price && ethers.utils.formatEther(price)} MATIC</span>\n                  </div>\n                  <div className=\"p-0 m-0\">\n                    <span className=\"p-0 m-0 text-white text-xs\">Available: {10000 - totalSupply} out of 10000</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            ): null}\n\n          </div>\n    </>\n  )\n\n}\n\nfunction Roadmap() {\n\n  return (\n    <div className=\"text-center mt-10\">\n      <h3 className=\"text-xl pb-5\">Roadmap</h3>\n      <div>\n        <table className=\"border-collapse border table-auto text-left\">\n          <tr>\n            <td className=\"border p-5\">Game prototype</td>\n            <td className=\"border p-5\">September 2021</td>\n            <td className=\"border p-5 text-right\">✅</td>\n          </tr>\n          <tr>\n            <td className=\"border p-5\">NFT collection draft</td>\n            <td className=\"border p-5\">September 2021</td>\n            <td className=\"border p-5 text-right\">✅</td>\n          </tr>\n          <tr>\n            <td className=\"border p-5\">NFT collection release</td>\n            <td className=\"border p-5\">October 2021</td>\n            <td className=\"border p-5 text-right\">pending</td>\n          </tr>\n          <tr>\n            <td className=\"border p-5\">Game release</td>\n            <td className=\"border p-5\">October 2021</td>\n            <td className=\"border p-5 text-right\">pending</td>\n          </tr>\n          <tr>\n            <td className=\"border p-5\">NFT staking</td>\n            <td className=\"border p-5\">November 2021</td>\n            <td className=\"border p-5 text-right\">pending</td>\n          </tr>\n          <tr>\n            <td className=\"border p-5\">Liqudity Pool staking</td>\n            <td className=\"border p-5\">November 2021</td>\n            <td className=\"border p-5 text-right\">pending</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MoralisProvider } from \"react-moralis\";\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst moralisConfig = {\n  test: {appId: \"qbDgtX7LMRwrKfrnFsVByi7pxup2gyuE3lX9O32I\", serverUrl: \"https://4xftb2hl4taq.grandmoralis.com:2053/server\"},\n  production: {appId: \"JBfxbweoLK5be7xnZineX05Z3MRAPBoIohXvvqgX\", serverUrl: \"https://vqntw2bxdpp2.bigmoralis.com:2053/server\"},\n}\n\nlet isProduction = true;\n\nReactDOM.render(\n  <MoralisProvider {...(isProduction ? moralisConfig.production : moralisConfig.test)}>\n  <App isProduction={isProduction} />\n  </MoralisProvider>,\n  document.getElementById(\"root\"),\n);\n\nreportWebVitals(console.log);\n"],"sourceRoot":""}